// Generated by CoffeeScript 1.6.2
(function() {
  var PROFILE_ACTION;

  PROFILE_ACTION = {
    BANNER: {
      type: 'banner',
      button: 'Submit Banner',
      header: 'Add Banner',
      url: 'Link To'
    },
    PRODUCT: {
      url: 'Imvu Link',
      type: 'product',
      button: 'Submit Product',
      header: 'Add Product'
    }
  };

  App.AccountController = Ember.ObjectController.extend({
    needs: ['auth'],
    profileActionButtonPreviousText: null,
    profileActionButtonText: null,
    profileActionTitleText: null,
    profileActionUrlText: null,
    profileActionType: null,
    profileInfo: null,
    profileBanners: null,
    profileProducts: null,
    profileLoading: false,
    promptLoading: false,
    imagePromptMain: null,
    imagePromptThumb: null,
    showProfileSaved: false,
    user: (function() {
      var user;

      user = this.get('controllers.auth.user');
      this.set('profileInfo', user.profile || {});
      this.set('profileBanners', user.banners || []);
      this.set('profileProducts', user.products || []);
      return user;
    }).property('controllers.auth.user'),
    notVerified: (function() {
      if (this.get('user.imvu') || this.get('user.isFacebook') || this.get('user.isVerified')) {
        return false;
      }
      return true;
    }).property('user.imvu', 'user.isVerified'),
    isTypeBanner: (function() {
      return this.get('profileActionType') === PROFILE_ACTION.BANNER.type;
    }).property('profileActionType'),
    isTypeProduct: (function() {
      return this.get('profileActionType') === PROFILE_ACTION.PRODUCT.type;
    }).property('profileActionType'),
    supportsFileApi: (function() {
      if (window.File && window.FileReader && window.Blob) {
        return true;
      } else {
        return false;
      }
    }).property(),
    validPromptSubmit: function() {
      if (!this.get('imagePromptMain')) {
        return 'Select the Main image';
      }
      if (!this.get('imagePromptThumb') && this.get('isTypeProduct')) {
        return 'Select the Thumbnail image';
      }
      return true;
    },
    setPromptLoading: function(isLoading) {
      if (isLoading) {
        this.set('profileActionButtonPreviousText', this.get('profileActionButtonText'));
      }
      this.setProperties({
        promptLoading: isLoading,
        profileActionButtonText: isLoading ? 'One moment...' : this.get('profileActionButtonPreviousText')
      });
    },
    setPrompt: function(profileAction) {
      if (!this.get('supportsFileApi')) {
        alert('Your browser does not support new standards. Please let the Admin know so we support older browsers in the future.');
        return;
      }
      this.setProperties({
        profileActionButtonText: profileAction.button,
        profileActionTitleText: profileAction.header,
        profileActionUrlText: profileAction.url,
        profileActionType: profileAction.type
      });
    },
    resetPrompt: function() {
      this.setProperties({
        profileActionButtonText: null,
        profileActionTitleText: null,
        profileActionUrlText: null,
        profileActionType: null,
        imagePromptThumb: null,
        imagePromptMain: null
      });
    },
    handlePromptResponse: function(data) {
      switch (this.get('profileActionType')) {
        case PROFILE_ACTION.BANNER.type:
          this.get('profileBanners').pushObject(data);
          break;
        case PROFILE_ACTION.PRODUCT.type:
          this.get('profileProducts').pushObject(data);
      }
    },
    profileActionSubmitPrompt: function(data) {
      var _this = this;

      this.setPromptLoading(true);
      $.ajax({
        data: data,
        type: 'POST',
        cache: false,
        contentType: false,
        processData: false,
        url: "/rest/profile/" + (this.get('profileActionType')),
        success: function(result) {
          _this.handlePromptResponse(result);
          _this.setPromptLoading(false);
          _this.resetPrompt();
        },
        error: function(error) {
          _this.setPromptLoading(false);
          console.error(error);
          alert("Error: " + error.responseText);
        }
      });
    },
    profileActionSubmitProfile: function() {
      var _this = this;

      this.set('profileLoading', true);
      $.ajax({
        data: {
          about: this.get('profileInfo.about'),
          style: this.get('profileInfo.style')
        },
        type: 'POST',
        url: '/rest/profile',
        success: function(result) {
          _this.set('profileLoading', false);
          _this.set('showProfileSaved', true);
          Ember.run.later(_this, (function() {
            return this.set('showProfileSaved', false);
          }), 3000);
        },
        error: function(error) {
          _this.set('profileLoading', false);
          alert(error.responseText);
          console.error(error);
        }
      });
    },
    actions: {
      promptAddBanner: function() {
        this.setPrompt(PROFILE_ACTION.BANNER);
      },
      promptAddProduct: function() {
        this.setPrompt(PROFILE_ACTION.PRODUCT);
      }
    }
  });

}).call(this);
