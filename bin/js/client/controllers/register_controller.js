// Generated by CoffeeScript 1.6.2
(function() {
  var EMAIL_REGEX;

  EMAIL_REGEX = new RegExp(/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/);

  App.RegisterController = Ember.ObjectController.extend({
    needs: ['auth'],
    loading: false,
    exists: false,
    errors: null,
    email: null,
    password: null,
    pazzword: null,
    emailOk: (function() {
      return EMAIL_REGEX.test(this.get('email'));
    }).property('email'),
    passwordOk: (function() {
      return this.get('password.length') > 5;
    }).property('password'),
    pazzwordOk: (function() {
      var p;

      p = this.getProperties('password', 'pazzword', 'passwordOk');
      return p.passwordOk && p.password === p.pazzword;
    }).property('password', 'pazzword', 'passwordOk'),
    cannotSubmit: (function() {
      var p;

      p = this.getProperties('loading', 'emailOk', 'passwordOk', 'pazzwordOk');
      return p.loading || !p.emailOk || !p.passwordOk || !p.pazzwordOk;
    }).property('loading', 'emailOk', 'passwordOk', 'pazzwordOk'),
    clearFlags: function() {
      this.set('errors', null);
      this.set('exists', false);
      this.set('loading', true);
    },
    displayError: function(error) {
      var errorField, errorItem, errors, _ref;

      errors = [];
      if (error['responseJSON']) {
        _ref = error['responseJSON'].errors;
        for (errorField in _ref) {
          errorItem = _ref[errorField];
          if (errorField === 'exists') {
            this.set('exists', true);
          }
          errors.push(errorItem['message']);
        }
      } else if (error['responseText']) {
        errors.push(error['responseText']);
      }
      this.set('errors', errors);
    },
    actions: {
      submit: function() {
        var _this = this;

        if (this.get('cannotSubmit')) {
          return;
        }
        this.clearFlags();
        $.ajax({
          type: 'POST',
          url: 'rest/user/register',
          data: this.getProperties('email', 'password', 'pazzword'),
          success: function(user) {
            _this.get('controllers.auth').authenticate(user);
//            _this.transitionToRoute('');
          },
          error: function(error) {
            _this.set('loading', false);
            _this.displayError(error);
          }
        });
      }
    }
  });

}).call(this);
